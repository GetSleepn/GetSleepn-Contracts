/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Dex, DexInterface } from "../Dex";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "category",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sleepTokenAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
    ],
    name: "BuyNft",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "category",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sleepTokenAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
    ],
    name: "UpgradeNft",
    type: "event",
  },
  {
    inputs: [],
    name: "bedroomNftInstance",
    outputs: [
      {
        internalType: "contract BedroomNft",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "category",
        type: "uint256",
      },
    ],
    name: "buyNft",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sleepTokenInstance",
        type: "address",
      },
      {
        internalType: "address",
        name: "_bedroomNftInstance",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sleepTokenInstance",
    outputs: [
      {
        internalType: "contract SleepTokenInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610e80806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063715018a61161005b578063715018a6146100d85780638da5cb5b146100e2578063db6f3d6e14610100578063f2fde38b1461011e5761007d565b8063485cc955146100825780634a9c22761461009e578063556f8084146100bc575b600080fd5b61009c60048036038101906100979190610895565b61013a565b005b6100a66101d2565b6040516100b39190610934565b60405180910390f35b6100d660048036038101906100d19190610985565b6101f8565b005b6100e06103ad565b005b6100ea610435565b6040516100f791906109d4565b60405180910390f35b61010861045f565b6040516101159190610a10565b60405180910390f35b61013860048036038101906101339190610a2b565b610485565b005b6000610146600161057c565b9050801561016a576001600060016101000a81548160ff0219169083151502179055505b610174838361066c565b80156101cd5760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860016040516101c49190610aa0565b60405180910390a15b505050565b606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600073ffffffffffffffffffffffffffffffffffffffff16606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610289576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028090610b3e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361031a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031190610bd0565b60405180910390fd5b606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631dd4fd2d33846040518363ffffffff1660e01b8152600401610377929190610bff565b600060405180830381600087803b15801561039157600080fd5b505af11580156103a5573d6000803e3d6000fd5b505050505050565b6103b5610741565b73ffffffffffffffffffffffffffffffffffffffff166103d3610435565b73ffffffffffffffffffffffffffffffffffffffff1614610429576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042090610c74565b60405180910390fd5b6104336000610749565b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61048d610741565b73ffffffffffffffffffffffffffffffffffffffff166104ab610435565b73ffffffffffffffffffffffffffffffffffffffff1614610501576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f890610c74565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610570576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056790610d06565b60405180910390fd5b61057981610749565b50565b60008060019054906101000a900460ff16156105f35760018260ff161480156105ab57506105a93061080f565b155b6105ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e190610d98565b60405180910390fd5b60009050610667565b8160ff1660008054906101000a900460ff1660ff1610610648576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063f90610d98565b60405180910390fd5b816000806101000a81548160ff021916908360ff160217905550600190505b919050565b600060019054906101000a900460ff166106bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b290610e2a565b60405180910390fd5b81606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080606660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600033905090565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061086282610837565b9050919050565b61087281610857565b811461087d57600080fd5b50565b60008135905061088f81610869565b92915050565b600080604083850312156108ac576108ab610832565b5b60006108ba85828601610880565b92505060206108cb85828601610880565b9150509250929050565b6000819050919050565b60006108fa6108f56108f084610837565b6108d5565b610837565b9050919050565b600061090c826108df565b9050919050565b600061091e82610901565b9050919050565b61092e81610913565b82525050565b60006020820190506109496000830184610925565b92915050565b6000819050919050565b6109628161094f565b811461096d57600080fd5b50565b60008135905061097f81610959565b92915050565b6000806040838503121561099c5761099b610832565b5b60006109aa85828601610970565b92505060206109bb85828601610970565b9150509250929050565b6109ce81610857565b82525050565b60006020820190506109e960008301846109c5565b92915050565b60006109fa82610901565b9050919050565b610a0a816109ef565b82525050565b6000602082019050610a256000830184610a01565b92915050565b600060208284031215610a4157610a40610832565b5b6000610a4f84828501610880565b91505092915050565b6000819050919050565b600060ff82169050919050565b6000610a8a610a85610a8084610a58565b6108d5565b610a62565b9050919050565b610a9a81610a6f565b82525050565b6000602082019050610ab56000830184610a91565b92915050565b600082825260208201905092915050565b7f736c656570546f6b656e2061646472657373206973206e6f7420636f6e66696760008201527f7572656400000000000000000000000000000000000000000000000000000000602082015250565b6000610b28602483610abb565b9150610b3382610acc565b604082019050919050565b60006020820190508181036000830152610b5781610b1b565b9050919050565b7f626564726f6f6d4e66742061646472657373206973206e6f7420636f6e66696760008201527f7572656400000000000000000000000000000000000000000000000000000000602082015250565b6000610bba602483610abb565b9150610bc582610b5e565b604082019050919050565b60006020820190508181036000830152610be981610bad565b9050919050565b610bf98161094f565b82525050565b6000604082019050610c1460008301856109c5565b610c216020830184610bf0565b9392505050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610c5e602083610abb565b9150610c6982610c28565b602082019050919050565b60006020820190508181036000830152610c8d81610c51565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610cf0602683610abb565b9150610cfb82610c94565b604082019050919050565b60006020820190508181036000830152610d1f81610ce3565b9050919050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000610d82602e83610abb565b9150610d8d82610d26565b604082019050919050565b60006020820190508181036000830152610db181610d75565b9050919050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b6000610e14602b83610abb565b9150610e1f82610db8565b604082019050919050565b60006020820190508181036000830152610e4381610e07565b905091905056fea2646970667358221220fdafddf1ec7b691e7ab89e1b2fd6a7cf28fcc88ca53f8d958b82ad868d28785964736f6c634300080d0033";

export class Dex__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Dex> {
    return super.deploy(overrides || {}) as Promise<Dex>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Dex {
    return super.attach(address) as Dex;
  }
  connect(signer: Signer): Dex__factory {
    return super.connect(signer) as Dex__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DexInterface {
    return new utils.Interface(_abi) as DexInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Dex {
    return new Contract(address, _abi, signerOrProvider) as Dex;
  }
}
