{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x86A3Df15340e24F2D55d4a3b4E78e30899f3780e",
    "txHash": "0x78c2a56f0f4db6a0cfa3a5a09a98a61070b2e59e1e7cc7df955826991440cb65"
  },
  "proxies": [
    {
      "address": "0x84c895074eA9aB9FF1ae1101A036fe8040352Dc9",
      "txHash": "0xacaf2a9f3210b9aec7bdee575f5a94a481ea02ef6831a61d3d6ec7e3190187df",
      "kind": "transparent"
    },
    {
      "address": "0x920907cbc06f10bcC141c4126eEd398492398793",
      "txHash": "0x68513ba5e6e3adb293d016f369e41f42943bc1eae755eb13ec9473f04c432e61",
      "kind": "transparent"
    },
    {
      "address": "0x45D484c35f13e6FFe370a881728508bf48da77CB",
      "txHash": "0xfb4b055ecacadc1a15b4c8089507268d0db75a5a2a9dcaee8087ffa025fdb760",
      "kind": "transparent"
    },
    {
      "address": "0x4FC7D46Ebc6165A72926d0711f0855f14bAeaAd7",
      "txHash": "0x5cc58026c38fcc79369f9a085330187f4548268cd50ad2661943b86347fc6da2",
      "kind": "transparent"
    },
    {
      "address": "0x41D0fF135f6e50e9b5Bc6e030E7573703179D960",
      "txHash": "0x863d58bee920655295d0ddaf362a3e12939055f39ea9447955acf9271c1b52e6",
      "kind": "transparent"
    },
    {
      "address": "0xa87637C7E74B6f74be80EA0507C7AfDb204F950A",
      "txHash": "0x956c342324e91c356c7f60f2779571f9951e7141546ee41d468a83edd192c963",
      "kind": "transparent"
    },
    {
      "address": "0xb150a58d376DeF437AB8b19ab351db7BA2C1eDEe",
      "kind": "transparent"
    },
    {
      "address": "0x3240E10ad3EBc6b66E8FaAA0E288123702B3A29f",
      "txHash": "0x4fa47a52713bf951db9f88a77afb7c8b737a46446c5f2b1ed68c606cb6c1c1c2",
      "kind": "transparent"
    }
  ],
  "impls": {
    "e8ceb25fddfed6250ce2a017d2aef5e9b8fd2cd32eeed57c080db22769c59618": {
      "address": "0xCA8e1B6d707e5fc79A460cc8be4af96993bD0d30",
      "txHash": "0xf7cb614f67cbe59ed1d46b51690e36991c0540a49d45ef0fc31302031649de72",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "vrfCoordinator",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "VRFConsumerBaseV2Upgradable",
            "src": "contracts/Utils/VRFConsumerBaseV2Upgradable.sol:12"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "VRFConsumerBaseV2Upgradable",
            "src": "contracts/Utils/VRFConsumerBaseV2Upgradable.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "153",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "154",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:522"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "_baseURI",
            "offset": 0,
            "slot": "251",
            "type": "t_string_storage",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:27"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:77"
          },
          {
            "label": "dexAddress",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:27"
          },
          {
            "label": "upgradeNftInstance",
            "offset": 0,
            "slot": "302",
            "type": "t_contract(IUpgradeNft)4199",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:30"
          },
          {
            "label": "COORDINATOR",
            "offset": 0,
            "slot": "303",
            "type": "t_contract(VRFCoordinatorV2Interface)183",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:33"
          },
          {
            "label": "LINKTOKEN",
            "offset": 0,
            "slot": "304",
            "type": "t_contract(LinkTokenInterface)94",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:34"
          },
          {
            "label": "numWords",
            "offset": 20,
            "slot": "304",
            "type": "t_uint32",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:35"
          },
          {
            "label": "callbackGasLimit",
            "offset": 24,
            "slot": "304",
            "type": "t_uint32",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:36"
          },
          {
            "label": "requestConfirmations",
            "offset": 28,
            "slot": "304",
            "type": "t_uint16",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:37"
          },
          {
            "label": "subscriptionId",
            "offset": 0,
            "slot": "305",
            "type": "t_uint64",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:38"
          },
          {
            "label": "keyHash",
            "offset": 0,
            "slot": "306",
            "type": "t_bytes32",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:39"
          },
          {
            "label": "fileFormat",
            "offset": 0,
            "slot": "307",
            "type": "t_string_storage",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:79"
          },
          {
            "label": "tokenId",
            "offset": 0,
            "slot": "308",
            "type": "t_uint256",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:82"
          },
          {
            "label": "requestIdToTokenId",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:85"
          },
          {
            "label": "tokenIdToNftSpecifications",
            "offset": 0,
            "slot": "310",
            "type": "t_mapping(t_uint256,t_struct(NftSpecifications)2814_storage)",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:88"
          },
          {
            "label": "tokenIdToNftOwnership",
            "offset": 0,
            "slot": "311",
            "type": "t_mapping(t_uint256,t_struct(NftOwnership)2830_storage)",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:91"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IUpgradeNft)4199": {
            "label": "contract IUpgradeNft",
            "numberOfBytes": "20"
          },
          "t_contract(LinkTokenInterface)94": {
            "label": "contract LinkTokenInterface",
            "numberOfBytes": "20"
          },
          "t_contract(VRFCoordinatorV2Interface)183": {
            "label": "contract VRFCoordinatorV2Interface",
            "numberOfBytes": "20"
          },
          "t_enum(Category)2818": {
            "label": "enum BedroomNft.Category",
            "members": [
              "Studio",
              "Deluxe",
              "Luxury"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NftOwnership)2830_storage)": {
            "label": "mapping(uint256 => struct BedroomNft.NftOwnership)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NftSpecifications)2814_storage)": {
            "label": "mapping(uint256 => struct BedroomNft.NftSpecifications)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(NftOwnership)2830_storage": {
            "label": "struct BedroomNft.NftOwnership",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "designId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "level",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "category",
                "type": "t_enum(Category)2818",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(NftSpecifications)2814_storage": {
            "label": "struct BedroomNft.NftSpecifications",
            "members": [
              {
                "label": "lightIsolationScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "bedroomThermalIsolationScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "soundIsolationScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "temperatureScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "humidityScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "sleepAidMachinesScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "circadianRhythmRegulation",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "sizeScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "heightScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "bedBaseScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "mattressTechnologyScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "mattressThicknessScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "mattressDeformationScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "thermalIsolationScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "13"
              },
              {
                "label": "hygrometricRegulationScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "14"
              },
              {
                "label": "comforterComfortabilityScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "15"
              },
              {
                "label": "pillowComfortabilityScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "16"
              }
            ],
            "numberOfBytes": "544"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "6e64436e36d0b56164a0200d2ba2ef2c737b2e3349592a1ed8132d926991aeb1": {
      "address": "0x8149E6a0f0a9B654c3F625F1274EFaEb3253d501",
      "txHash": "0xe4cb0ef50e9e454867889a147e9d33b12075b9dc58120b621a20f4feca3b0926",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "superToken",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(ISuperToken)5208",
            "contract": "Reward",
            "src": "contracts/Reward.sol:17"
          },
          {
            "label": "host",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(ISuperfluid)5771",
            "contract": "Reward",
            "src": "contracts/Reward.sol:19"
          },
          {
            "label": "cfa",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(IConstantFlowAgreementV1)4228",
            "contract": "Reward",
            "src": "contracts/Reward.sol:20"
          },
          {
            "label": "cfaV1",
            "offset": 0,
            "slot": "104",
            "type": "t_struct(InitData)3067_storage",
            "contract": "Reward",
            "src": "contracts/Reward.sol:23"
          },
          {
            "label": "bedroomNft",
            "offset": 0,
            "slot": "106",
            "type": "t_contract(IBedroomNft)8575",
            "contract": "Reward",
            "src": "contracts/Reward.sol:26"
          },
          {
            "label": "rewardsByCategory",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_enum(Category)8414,t_mapping(t_uint256,t_int96))",
            "contract": "Reward",
            "src": "contracts/Reward.sol:29"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IBedroomNft)8575": {
            "label": "contract IBedroomNft",
            "numberOfBytes": "20"
          },
          "t_contract(IConstantFlowAgreementV1)4228": {
            "label": "contract IConstantFlowAgreementV1",
            "numberOfBytes": "20"
          },
          "t_contract(ISuperToken)5208": {
            "label": "contract ISuperToken",
            "numberOfBytes": "20"
          },
          "t_contract(ISuperfluid)5771": {
            "label": "contract ISuperfluid",
            "numberOfBytes": "20"
          },
          "t_enum(Category)8414": {
            "label": "enum IBedroomNft.Category",
            "members": [
              "Studio",
              "Deluxe",
              "Luxury"
            ],
            "numberOfBytes": "1"
          },
          "t_int96": {
            "label": "int96",
            "numberOfBytes": "12"
          },
          "t_mapping(t_enum(Category)8414,t_mapping(t_uint256,t_int96))": {
            "label": "mapping(enum IBedroomNft.Category => mapping(uint256 => int96))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_int96)": {
            "label": "mapping(uint256 => int96)",
            "numberOfBytes": "32"
          },
          "t_struct(InitData)3067_storage": {
            "label": "struct CFAv1Library.InitData",
            "members": [
              {
                "label": "host",
                "type": "t_contract(ISuperfluid)5771",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "cfa",
                "type": "t_contract(IConstantFlowAgreementV1)4228",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c82727c02713fec02e72bde924e67021d0a36910b3614655b25ffa434ea40625": {
      "address": "0x12b378CD3520bB7E2Bb8F8825C4d93aE0cC49ab5",
      "txHash": "0x70fed6f7fde7aab2cf36b691a9c92ab92dc702bd55423317e23827d4a6d967b8",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:51"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "rewardContract",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "SleepToken",
            "src": "contracts/SleepToken.sol:21"
          },
          {
            "label": "teamWallet",
            "offset": 0,
            "slot": "252",
            "type": "t_address",
            "contract": "SleepToken",
            "src": "contracts/SleepToken.sol:24"
          },
          {
            "label": "pool",
            "offset": 0,
            "slot": "253",
            "type": "t_contract(IUniswapV3Pool)1544",
            "contract": "SleepToken",
            "src": "contracts/SleepToken.sol:27"
          },
          {
            "label": "factory",
            "offset": 0,
            "slot": "254",
            "type": "t_contract(IUniswapV3Factory)1522",
            "contract": "SleepToken",
            "src": "contracts/SleepToken.sol:30"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IUniswapV3Factory)1522": {
            "label": "contract IUniswapV3Factory",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV3Pool)1544": {
            "label": "contract IUniswapV3Pool",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b58ce01e5a163f850ed82546256717e2963d4253781cd31500721ab8ededbc4c": {
      "address": "0x8Cac82d6054CfA72279377c6ab00632B54a58A8a",
      "txHash": "0x544240496dc7a2d5b611fa51f072a0c59054ef8d941149a70472ed3e9ad53e86",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "vrfCoordinator",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "VRFConsumerBaseV2Upgradable",
            "src": "contracts/Utils/VRFConsumerBaseV2Upgradable.sol:12"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "VRFConsumerBaseV2Upgradable",
            "src": "contracts/Utils/VRFConsumerBaseV2Upgradable.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "153",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "154",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:522"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "_baseURI",
            "offset": 0,
            "slot": "251",
            "type": "t_string_storage",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:27"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:77"
          },
          {
            "label": "dexAddress",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "UpgradeNft",
            "src": "contracts/UpgradeNft.sol:28"
          },
          {
            "label": "bedroomNftInstance",
            "offset": 0,
            "slot": "302",
            "type": "t_contract(IBedroomNft)8575",
            "contract": "UpgradeNft",
            "src": "contracts/UpgradeNft.sol:31"
          },
          {
            "label": "COORDINATOR",
            "offset": 0,
            "slot": "303",
            "type": "t_contract(VRFCoordinatorV2Interface)183",
            "contract": "UpgradeNft",
            "src": "contracts/UpgradeNft.sol:34"
          },
          {
            "label": "LINKTOKEN",
            "offset": 0,
            "slot": "304",
            "type": "t_contract(LinkTokenInterface)94",
            "contract": "UpgradeNft",
            "src": "contracts/UpgradeNft.sol:35"
          },
          {
            "label": "numWords",
            "offset": 20,
            "slot": "304",
            "type": "t_uint32",
            "contract": "UpgradeNft",
            "src": "contracts/UpgradeNft.sol:36"
          },
          {
            "label": "callbackGasLimit",
            "offset": 24,
            "slot": "304",
            "type": "t_uint32",
            "contract": "UpgradeNft",
            "src": "contracts/UpgradeNft.sol:37"
          },
          {
            "label": "requestConfirmations",
            "offset": 28,
            "slot": "304",
            "type": "t_uint16",
            "contract": "UpgradeNft",
            "src": "contracts/UpgradeNft.sol:38"
          },
          {
            "label": "subscriptionId",
            "offset": 0,
            "slot": "305",
            "type": "t_uint64",
            "contract": "UpgradeNft",
            "src": "contracts/UpgradeNft.sol:39"
          },
          {
            "label": "keyHash",
            "offset": 0,
            "slot": "306",
            "type": "t_bytes32",
            "contract": "UpgradeNft",
            "src": "contracts/UpgradeNft.sol:40"
          },
          {
            "label": "fileFormat",
            "offset": 0,
            "slot": "307",
            "type": "t_string_storage",
            "contract": "UpgradeNft",
            "src": "contracts/UpgradeNft.sol:54"
          },
          {
            "label": "tokenId",
            "offset": 0,
            "slot": "308",
            "type": "t_uint256",
            "contract": "UpgradeNft",
            "src": "contracts/UpgradeNft.sol:57"
          },
          {
            "label": "requestIdToTokenId",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "UpgradeNft",
            "src": "contracts/UpgradeNft.sol:60"
          },
          {
            "label": "tokenIdToUpgradeSpecifications",
            "offset": 0,
            "slot": "310",
            "type": "t_mapping(t_uint256,t_struct(UpgradeSpecifications)9181_storage)",
            "contract": "UpgradeNft",
            "src": "contracts/UpgradeNft.sol:61"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IBedroomNft)8575": {
            "label": "contract IBedroomNft",
            "numberOfBytes": "20"
          },
          "t_contract(LinkTokenInterface)94": {
            "label": "contract LinkTokenInterface",
            "numberOfBytes": "20"
          },
          "t_contract(VRFCoordinatorV2Interface)183": {
            "label": "contract VRFCoordinatorV2Interface",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(UpgradeSpecifications)9181_storage)": {
            "label": "mapping(uint256 => struct UpgradeNft.UpgradeSpecifications)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(UpgradeSpecifications)9181_storage": {
            "label": "struct UpgradeNft.UpgradeSpecifications",
            "members": [
              {
                "label": "attributeIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "valueToAdd",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "valueToAddMax",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "newDesignId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "upgradeDesignId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "7fcbe9d65cd4757231fbb0d72545aa8c234993bd94741bfd3fe4dbfb9195e127": {
      "address": "0x510DC797d36eaf8AD0C01A114937cfc7f718b46d",
      "txHash": "0x8732dabf39739a37e35c2bf088fb05b6f79e831d24caa28d31b381a6451d9651",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "teamWallet",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "Dex",
            "src": "contracts/Dex.sol:13"
          },
          {
            "label": "sleepTokenInstance",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(ISleepToken)2014",
            "contract": "Dex",
            "src": "contracts/Dex.sol:16"
          },
          {
            "label": "bedroomNftInstance",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(IBedroomNft)1918",
            "contract": "Dex",
            "src": "contracts/Dex.sol:19"
          },
          {
            "label": "upgradeNftInstance",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(IUpgradeNft)2082",
            "contract": "Dex",
            "src": "contracts/Dex.sol:22"
          },
          {
            "label": "prices",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_enum(Category)1757,t_struct(NftPrices)1324_storage)",
            "contract": "Dex",
            "src": "contracts/Dex.sol:38"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IBedroomNft)1918": {
            "label": "contract IBedroomNft",
            "numberOfBytes": "20"
          },
          "t_contract(ISleepToken)2014": {
            "label": "contract ISleepToken",
            "numberOfBytes": "20"
          },
          "t_contract(IUpgradeNft)2082": {
            "label": "contract IUpgradeNft",
            "numberOfBytes": "20"
          },
          "t_enum(Category)1757": {
            "label": "enum IBedroomNft.Category",
            "members": [
              "Studio",
              "Deluxe",
              "Luxury"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_enum(Category)1757,t_struct(NftPrices)1324_storage)": {
            "label": "mapping(enum IBedroomNft.Category => struct Dex.NftPrices)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(upgradeInfos)1316_storage)": {
            "label": "mapping(uint256 => struct Dex.upgradeInfos)",
            "numberOfBytes": "32"
          },
          "t_struct(NftPrices)1324_storage": {
            "label": "struct Dex.NftPrices",
            "members": [
              {
                "label": "purchaseCost",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "upgradeCosts",
                "type": "t_mapping(t_uint256,t_struct(upgradeInfos)1316_storage)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(upgradeInfos)1316_storage": {
            "label": "struct Dex.upgradeInfos",
            "members": [
              {
                "label": "indexAttribute",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "valueToAddMax",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c7baea813468df8217194e76276c75395437543dba3ac8bd4a61aaa05ceae79d": {
      "address": "0x28c611dF3e21608DA714e72Ad06451855CD573d0",
      "txHash": "0x0307f1ba8ce74d05ab5428171ae6f9a5cc2a4554d3957425ca5f82474361c3db",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "teamWallet",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "Dex",
            "src": "contracts/Dex.sol:13"
          },
          {
            "label": "sleepTokenInstance",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(ISleepToken)2016",
            "contract": "Dex",
            "src": "contracts/Dex.sol:16"
          },
          {
            "label": "bedroomNftInstance",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(IBedroomNft)1920",
            "contract": "Dex",
            "src": "contracts/Dex.sol:19"
          },
          {
            "label": "upgradeNftInstance",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(IUpgradeNft)2084",
            "contract": "Dex",
            "src": "contracts/Dex.sol:22"
          },
          {
            "label": "prices",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_enum(Category)1759,t_struct(NftPrices)1324_storage)",
            "contract": "Dex",
            "src": "contracts/Dex.sol:38"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IBedroomNft)1920": {
            "label": "contract IBedroomNft",
            "numberOfBytes": "20"
          },
          "t_contract(ISleepToken)2016": {
            "label": "contract ISleepToken",
            "numberOfBytes": "20"
          },
          "t_contract(IUpgradeNft)2084": {
            "label": "contract IUpgradeNft",
            "numberOfBytes": "20"
          },
          "t_enum(Category)1759": {
            "label": "enum IBedroomNft.Category",
            "members": [
              "Studio",
              "Deluxe",
              "Luxury"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_enum(Category)1759,t_struct(NftPrices)1324_storage)": {
            "label": "mapping(enum IBedroomNft.Category => struct Dex.NftPrices)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(upgradeInfos)1316_storage)": {
            "label": "mapping(uint256 => struct Dex.upgradeInfos)",
            "numberOfBytes": "32"
          },
          "t_struct(NftPrices)1324_storage": {
            "label": "struct Dex.NftPrices",
            "members": [
              {
                "label": "purchaseCost",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "upgradeCosts",
                "type": "t_mapping(t_uint256,t_struct(upgradeInfos)1316_storage)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(upgradeInfos)1316_storage": {
            "label": "struct Dex.upgradeInfos",
            "members": [
              {
                "label": "indexAttribute",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "valueToAddMax",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b339fbd8fb516ce3fe4af88c0c81645b56ca5c0ff3a2d1f8019acd4f0c155dd7": {
      "address": "0xEF80c27b374C428bdd3719Fd8FB1AEE0F64F9fB0",
      "txHash": "0x8a05e76b6757be77f696cc6edaebec336646fabaacdd5171beb681fd726f7095",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "superToken",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(ISuperToken)3159",
            "contract": "Reward",
            "src": "contracts/Reward.sol:17"
          },
          {
            "label": "host",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(ISuperfluid)3722",
            "contract": "Reward",
            "src": "contracts/Reward.sol:19"
          },
          {
            "label": "cfa",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(IConstantFlowAgreementV1)2179",
            "contract": "Reward",
            "src": "contracts/Reward.sol:20"
          },
          {
            "label": "cfaV1",
            "offset": 0,
            "slot": "104",
            "type": "t_struct(InitData)1018_storage",
            "contract": "Reward",
            "src": "contracts/Reward.sol:23"
          },
          {
            "label": "bedroomNft",
            "offset": 0,
            "slot": "106",
            "type": "t_contract(IBedroomNft)4850",
            "contract": "Reward",
            "src": "contracts/Reward.sol:26"
          },
          {
            "label": "rewardsByCategory",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_enum(Category)4689,t_mapping(t_uint256,t_int96))",
            "contract": "Reward",
            "src": "contracts/Reward.sol:29"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IBedroomNft)4850": {
            "label": "contract IBedroomNft",
            "numberOfBytes": "20"
          },
          "t_contract(IConstantFlowAgreementV1)2179": {
            "label": "contract IConstantFlowAgreementV1",
            "numberOfBytes": "20"
          },
          "t_contract(ISuperToken)3159": {
            "label": "contract ISuperToken",
            "numberOfBytes": "20"
          },
          "t_contract(ISuperfluid)3722": {
            "label": "contract ISuperfluid",
            "numberOfBytes": "20"
          },
          "t_enum(Category)4689": {
            "label": "enum IBedroomNft.Category",
            "members": [
              "Studio",
              "Deluxe",
              "Luxury"
            ],
            "numberOfBytes": "1"
          },
          "t_int96": {
            "label": "int96",
            "numberOfBytes": "12"
          },
          "t_mapping(t_enum(Category)4689,t_mapping(t_uint256,t_int96))": {
            "label": "mapping(enum IBedroomNft.Category => mapping(uint256 => int96))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_int96)": {
            "label": "mapping(uint256 => int96)",
            "numberOfBytes": "32"
          },
          "t_struct(InitData)1018_storage": {
            "label": "struct CFAv1Library.InitData",
            "members": [
              {
                "label": "host",
                "type": "t_contract(ISuperfluid)3722",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "cfa",
                "type": "t_contract(IConstantFlowAgreementV1)2179",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "76d22bf67775e318d57fd464063b62b6de5fea64db07c98bf032d145c1835763": {
      "address": "0x76cBe31DcAE0F791B4a04fc282c939EEb27a8f4f",
      "txHash": "0x0a846b7cbbaa0624c4d301b3147efeb7471ce70ef89215569f2eeb1d71186fef",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "superToken",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(ISuperToken)3159",
            "contract": "Reward",
            "src": "contracts/Reward.sol:17"
          },
          {
            "label": "host",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(ISuperfluid)3722",
            "contract": "Reward",
            "src": "contracts/Reward.sol:19"
          },
          {
            "label": "cfa",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(IConstantFlowAgreementV1)2179",
            "contract": "Reward",
            "src": "contracts/Reward.sol:20"
          },
          {
            "label": "cfaV1",
            "offset": 0,
            "slot": "104",
            "type": "t_struct(InitData)1018_storage",
            "contract": "Reward",
            "src": "contracts/Reward.sol:23"
          },
          {
            "label": "bedroomNft",
            "offset": 0,
            "slot": "106",
            "type": "t_contract(IBedroomNft)4850",
            "contract": "Reward",
            "src": "contracts/Reward.sol:26"
          },
          {
            "label": "rewardsByCategory",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_enum(Category)4689,t_mapping(t_uint256,t_int96))",
            "contract": "Reward",
            "src": "contracts/Reward.sol:29"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IBedroomNft)4850": {
            "label": "contract IBedroomNft",
            "numberOfBytes": "20"
          },
          "t_contract(IConstantFlowAgreementV1)2179": {
            "label": "contract IConstantFlowAgreementV1",
            "numberOfBytes": "20"
          },
          "t_contract(ISuperToken)3159": {
            "label": "contract ISuperToken",
            "numberOfBytes": "20"
          },
          "t_contract(ISuperfluid)3722": {
            "label": "contract ISuperfluid",
            "numberOfBytes": "20"
          },
          "t_enum(Category)4689": {
            "label": "enum IBedroomNft.Category",
            "members": [
              "Studio",
              "Deluxe",
              "Luxury"
            ],
            "numberOfBytes": "1"
          },
          "t_int96": {
            "label": "int96",
            "numberOfBytes": "12"
          },
          "t_mapping(t_enum(Category)4689,t_mapping(t_uint256,t_int96))": {
            "label": "mapping(enum IBedroomNft.Category => mapping(uint256 => int96))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_int96)": {
            "label": "mapping(uint256 => int96)",
            "numberOfBytes": "32"
          },
          "t_struct(InitData)1018_storage": {
            "label": "struct CFAv1Library.InitData",
            "members": [
              {
                "label": "host",
                "type": "t_contract(ISuperfluid)3722",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "cfa",
                "type": "t_contract(IConstantFlowAgreementV1)2179",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "5fd15c25915ec2ff2c3f4efdd8e2c109227a5b5f79637f3df5d2b3323131ceb1": {
      "address": "0xC686293BCa596293dC5a57CB43FC38fEBe39A76f",
      "txHash": "0x543a4e2266a84bdee6d576eaa8c8ab2870ccb42e4442940b9c3f8248a6cb7ad6",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:51"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "rewardContract",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "SleepToken",
            "src": "contracts/SleepToken.sol:21"
          },
          {
            "label": "teamWallet",
            "offset": 0,
            "slot": "252",
            "type": "t_address",
            "contract": "SleepToken",
            "src": "contracts/SleepToken.sol:24"
          },
          {
            "label": "pool",
            "offset": 0,
            "slot": "253",
            "type": "t_contract(IUniswapV3Pool)5069",
            "contract": "SleepToken",
            "src": "contracts/SleepToken.sol:27"
          },
          {
            "label": "factory",
            "offset": 0,
            "slot": "254",
            "type": "t_contract(IUniswapV3Factory)5047",
            "contract": "SleepToken",
            "src": "contracts/SleepToken.sol:30"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IUniswapV3Factory)5047": {
            "label": "contract IUniswapV3Factory",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV3Pool)5069": {
            "label": "contract IUniswapV3Pool",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "5d2e8a5cab8c9af9d5878ca4e12e244871e5034e9b3fe4ce7114ca95e424224a": {
      "address": "0x57229De03F4b0e861B8F60cd1C9ADE9dDF32315C",
      "txHash": "0xef7cfecc7e5cffbdccbb7daa1d25b6f2ca7ef84b29e457bb853412f1ae8215b0",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "teamWallet",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "Dex",
            "src": "contracts/Dex.sol:13"
          },
          {
            "label": "sleepTokenInstance",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(ISleepToken)5410",
            "contract": "Dex",
            "src": "contracts/Dex.sol:16"
          },
          {
            "label": "bedroomNftInstance",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(IBedroomNft)5314",
            "contract": "Dex",
            "src": "contracts/Dex.sol:19"
          },
          {
            "label": "upgradeNftInstance",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(IUpgradeNft)5478",
            "contract": "Dex",
            "src": "contracts/Dex.sol:22"
          },
          {
            "label": "prices",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_enum(Category)5153,t_struct(NftPrices)4715_storage)",
            "contract": "Dex",
            "src": "contracts/Dex.sol:38"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IBedroomNft)5314": {
            "label": "contract IBedroomNft",
            "numberOfBytes": "20"
          },
          "t_contract(ISleepToken)5410": {
            "label": "contract ISleepToken",
            "numberOfBytes": "20"
          },
          "t_contract(IUpgradeNft)5478": {
            "label": "contract IUpgradeNft",
            "numberOfBytes": "20"
          },
          "t_enum(Category)5153": {
            "label": "enum IBedroomNft.Category",
            "members": [
              "Studio",
              "Deluxe",
              "Luxury"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_enum(Category)5153,t_struct(NftPrices)4715_storage)": {
            "label": "mapping(enum IBedroomNft.Category => struct Dex.NftPrices)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(upgradeInfos)4707_storage)": {
            "label": "mapping(uint256 => struct Dex.upgradeInfos)",
            "numberOfBytes": "32"
          },
          "t_struct(NftPrices)4715_storage": {
            "label": "struct Dex.NftPrices",
            "members": [
              {
                "label": "purchaseCost",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "upgradeCosts",
                "type": "t_mapping(t_uint256,t_struct(upgradeInfos)4707_storage)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(upgradeInfos)4707_storage": {
            "label": "struct Dex.upgradeInfos",
            "members": [
              {
                "label": "indexAttribute",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "valueToAddMax",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "f88e947cf0b5b2f27357ab6308564eda367f7d447b7e15c28b3e2960da179930": {
      "address": "0x83511E9f95A834dF71cfb5f98Df1eDCC091251f2",
      "txHash": "0x90c31a652b9b60a028ec434ef134a39f8770b565f502e7b1493d90e9f5b26879",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "superToken",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(ISuperToken)3159",
            "contract": "Reward",
            "src": "contracts/Reward.sol:17"
          },
          {
            "label": "host",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(ISuperfluid)3722",
            "contract": "Reward",
            "src": "contracts/Reward.sol:19"
          },
          {
            "label": "cfa",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(IConstantFlowAgreementV1)2179",
            "contract": "Reward",
            "src": "contracts/Reward.sol:20"
          },
          {
            "label": "cfaV1",
            "offset": 0,
            "slot": "104",
            "type": "t_struct(InitData)1018_storage",
            "contract": "Reward",
            "src": "contracts/Reward.sol:23"
          },
          {
            "label": "bedroomNft",
            "offset": 0,
            "slot": "106",
            "type": "t_contract(IBedroomNft)4850",
            "contract": "Reward",
            "src": "contracts/Reward.sol:26"
          },
          {
            "label": "rewardsByCategory",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_enum(Category)4689,t_mapping(t_uint256,t_int96))",
            "contract": "Reward",
            "src": "contracts/Reward.sol:29"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IBedroomNft)4850": {
            "label": "contract IBedroomNft",
            "numberOfBytes": "20"
          },
          "t_contract(IConstantFlowAgreementV1)2179": {
            "label": "contract IConstantFlowAgreementV1",
            "numberOfBytes": "20"
          },
          "t_contract(ISuperToken)3159": {
            "label": "contract ISuperToken",
            "numberOfBytes": "20"
          },
          "t_contract(ISuperfluid)3722": {
            "label": "contract ISuperfluid",
            "numberOfBytes": "20"
          },
          "t_enum(Category)4689": {
            "label": "enum IBedroomNft.Category",
            "members": [
              "Studio",
              "Deluxe",
              "Luxury"
            ],
            "numberOfBytes": "1"
          },
          "t_int96": {
            "label": "int96",
            "numberOfBytes": "12"
          },
          "t_mapping(t_enum(Category)4689,t_mapping(t_uint256,t_int96))": {
            "label": "mapping(enum IBedroomNft.Category => mapping(uint256 => int96))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_int96)": {
            "label": "mapping(uint256 => int96)",
            "numberOfBytes": "32"
          },
          "t_struct(InitData)1018_storage": {
            "label": "struct CFAv1Library.InitData",
            "members": [
              {
                "label": "host",
                "type": "t_contract(ISuperfluid)3722",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "cfa",
                "type": "t_contract(IConstantFlowAgreementV1)2179",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "cbd77b78fb4c40e72e434fa34a99b01683f507904bb29bbad42e42230186d0da": {
      "address": "0x02444C54B4aa937d622ebb31e1C92d40081Ba717",
      "txHash": "0xf57fd9190d8b90ba744a01d4f1ed84172c54eac6a91d72d4af6aa696711aad1d",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "vrfCoordinator",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "VRFConsumerBaseV2Upgradable",
            "src": "contracts/Utils/VRFConsumerBaseV2Upgradable.sol:12"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "VRFConsumerBaseV2Upgradable",
            "src": "contracts/Utils/VRFConsumerBaseV2Upgradable.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "153",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "154",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:522"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "_baseURI",
            "offset": 0,
            "slot": "251",
            "type": "t_string_storage",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:27"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:77"
          },
          {
            "label": "dexAddress",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:27"
          },
          {
            "label": "upgradeNftInstance",
            "offset": 0,
            "slot": "302",
            "type": "t_contract(IUpgradeNft)8884",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:30"
          },
          {
            "label": "COORDINATOR",
            "offset": 0,
            "slot": "303",
            "type": "t_contract(VRFCoordinatorV2Interface)183",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:33"
          },
          {
            "label": "LINKTOKEN",
            "offset": 0,
            "slot": "304",
            "type": "t_contract(LinkTokenInterface)94",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:34"
          },
          {
            "label": "numWords",
            "offset": 20,
            "slot": "304",
            "type": "t_uint32",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:35"
          },
          {
            "label": "callbackGasLimit",
            "offset": 24,
            "slot": "304",
            "type": "t_uint32",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:36"
          },
          {
            "label": "requestConfirmations",
            "offset": 28,
            "slot": "304",
            "type": "t_uint16",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:37"
          },
          {
            "label": "subscriptionId",
            "offset": 0,
            "slot": "305",
            "type": "t_uint64",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:38"
          },
          {
            "label": "keyHash",
            "offset": 0,
            "slot": "306",
            "type": "t_bytes32",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:39"
          },
          {
            "label": "fileFormat",
            "offset": 0,
            "slot": "307",
            "type": "t_string_storage",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:79"
          },
          {
            "label": "tokenId",
            "offset": 0,
            "slot": "308",
            "type": "t_uint256",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:82"
          },
          {
            "label": "requestIdToTokenId",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:85"
          },
          {
            "label": "tokenIdToNftSpecifications",
            "offset": 0,
            "slot": "310",
            "type": "t_mapping(t_uint256,t_struct(NftSpecifications)6808_storage)",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:88"
          },
          {
            "label": "tokenIdToNftOwnership",
            "offset": 0,
            "slot": "311",
            "type": "t_mapping(t_uint256,t_struct(NftOwnership)6824_storage)",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:91"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IUpgradeNft)8884": {
            "label": "contract IUpgradeNft",
            "numberOfBytes": "20"
          },
          "t_contract(LinkTokenInterface)94": {
            "label": "contract LinkTokenInterface",
            "numberOfBytes": "20"
          },
          "t_contract(VRFCoordinatorV2Interface)183": {
            "label": "contract VRFCoordinatorV2Interface",
            "numberOfBytes": "20"
          },
          "t_enum(Category)6812": {
            "label": "enum BedroomNft.Category",
            "members": [
              "Studio",
              "Deluxe",
              "Luxury"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NftOwnership)6824_storage)": {
            "label": "mapping(uint256 => struct BedroomNft.NftOwnership)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NftSpecifications)6808_storage)": {
            "label": "mapping(uint256 => struct BedroomNft.NftSpecifications)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(NftOwnership)6824_storage": {
            "label": "struct BedroomNft.NftOwnership",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "designId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "level",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "category",
                "type": "t_enum(Category)6812",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(NftSpecifications)6808_storage": {
            "label": "struct BedroomNft.NftSpecifications",
            "members": [
              {
                "label": "lightIsolationScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "bedroomThermalIsolationScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "soundIsolationScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "temperatureScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "humidityScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "sleepAidMachinesScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "circadianRhythmRegulation",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "sizeScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "heightScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "bedBaseScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "mattressTechnologyScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "mattressThicknessScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "mattressDeformationScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "thermalIsolationScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "13"
              },
              {
                "label": "hygrometricRegulationScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "14"
              },
              {
                "label": "comforterComfortabilityScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "15"
              },
              {
                "label": "pillowComfortabilityScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "16"
              }
            ],
            "numberOfBytes": "544"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "df1bf787d98d8dc67c85e3749fee9a80c626841492e077a25620698f8c1fae2f": {
      "address": "0x6d6a9B6992031C64173D9699EDcA1dfb373Ad870",
      "txHash": "0x9d812bada30a96b44508cf8a6fe22430032a542e8baf34aa447cd994baa25749",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "superToken",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(ISuperToken)3159",
            "contract": "Reward",
            "src": "contracts/Reward.sol:21"
          },
          {
            "label": "host",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(ISuperfluid)3722",
            "contract": "Reward",
            "src": "contracts/Reward.sol:24"
          },
          {
            "label": "cfa",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(IConstantFlowAgreementV1)2179",
            "contract": "Reward",
            "src": "contracts/Reward.sol:27"
          },
          {
            "label": "cfaV1",
            "offset": 0,
            "slot": "104",
            "type": "t_struct(InitData)1018_storage",
            "contract": "Reward",
            "src": "contracts/Reward.sol:31"
          },
          {
            "label": "bedroomNft",
            "offset": 0,
            "slot": "106",
            "type": "t_contract(IBedroomNft)4857",
            "contract": "Reward",
            "src": "contracts/Reward.sol:34"
          },
          {
            "label": "rewardsByCategory",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_enum(Category)4689,t_mapping(t_uint256,t_int96))",
            "contract": "Reward",
            "src": "contracts/Reward.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IBedroomNft)4857": {
            "label": "contract IBedroomNft",
            "numberOfBytes": "20"
          },
          "t_contract(IConstantFlowAgreementV1)2179": {
            "label": "contract IConstantFlowAgreementV1",
            "numberOfBytes": "20"
          },
          "t_contract(ISuperToken)3159": {
            "label": "contract ISuperToken",
            "numberOfBytes": "20"
          },
          "t_contract(ISuperfluid)3722": {
            "label": "contract ISuperfluid",
            "numberOfBytes": "20"
          },
          "t_enum(Category)4689": {
            "label": "enum IBedroomNft.Category",
            "members": [
              "Studio",
              "Deluxe",
              "Luxury"
            ],
            "numberOfBytes": "1"
          },
          "t_int96": {
            "label": "int96",
            "numberOfBytes": "12"
          },
          "t_mapping(t_enum(Category)4689,t_mapping(t_uint256,t_int96))": {
            "label": "mapping(enum IBedroomNft.Category => mapping(uint256 => int96))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_int96)": {
            "label": "mapping(uint256 => int96)",
            "numberOfBytes": "32"
          },
          "t_struct(InitData)1018_storage": {
            "label": "struct CFAv1Library.InitData",
            "members": [
              {
                "label": "host",
                "type": "t_contract(ISuperfluid)3722",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "cfa",
                "type": "t_contract(IConstantFlowAgreementV1)2179",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "009fd89d199aee462aeaeac0230bdda8efc0fb27226466ddefba471baaa51895": {
      "address": "0x1186751e6f014554b74F78D59cfc6e6e7504f5d4",
      "txHash": "0xddbed10141b1fab2fb9f8fd659e6db683ba85d3690dd0b374734790212932d56",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "teamWallet",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "Dex",
            "src": "contracts/Dex.sol:13"
          },
          {
            "label": "sleepTokenInstance",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(ISleepToken)8816",
            "contract": "Dex",
            "src": "contracts/Dex.sol:16"
          },
          {
            "label": "bedroomNftInstance",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(IBedroomNft)8586",
            "contract": "Dex",
            "src": "contracts/Dex.sol:19"
          },
          {
            "label": "upgradeNftInstance",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(IUpgradeNft)8884",
            "contract": "Dex",
            "src": "contracts/Dex.sol:22"
          },
          {
            "label": "prices",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_enum(Category)8425,t_struct(NftPrices)7980_storage)",
            "contract": "Dex",
            "src": "contracts/Dex.sol:38"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IBedroomNft)8586": {
            "label": "contract IBedroomNft",
            "numberOfBytes": "20"
          },
          "t_contract(ISleepToken)8816": {
            "label": "contract ISleepToken",
            "numberOfBytes": "20"
          },
          "t_contract(IUpgradeNft)8884": {
            "label": "contract IUpgradeNft",
            "numberOfBytes": "20"
          },
          "t_enum(Category)8425": {
            "label": "enum IBedroomNft.Category",
            "members": [
              "Studio",
              "Deluxe",
              "Luxury"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_enum(Category)8425,t_struct(NftPrices)7980_storage)": {
            "label": "mapping(enum IBedroomNft.Category => struct Dex.NftPrices)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(upgradeInfos)7972_storage)": {
            "label": "mapping(uint256 => struct Dex.upgradeInfos)",
            "numberOfBytes": "32"
          },
          "t_struct(NftPrices)7980_storage": {
            "label": "struct Dex.NftPrices",
            "members": [
              {
                "label": "purchaseCost",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "upgradeCosts",
                "type": "t_mapping(t_uint256,t_struct(upgradeInfos)7972_storage)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(upgradeInfos)7972_storage": {
            "label": "struct Dex.upgradeInfos",
            "members": [
              {
                "label": "indexAttribute",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "valueToAddMax",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a03f639ddc50dc261e0d57876823a5b07f10dee9f9fc7486814ce60aa6121c7a": {
      "address": "0x37dcB248f3689c0b961F6303a6359CC824eF6E54",
      "txHash": "0x716100aa6238c011bccfb50b17a7554a661709de56b326f4a14fa0f972081df9",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "vrfCoordinator",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "VRFConsumerBaseV2Upgradable",
            "src": "contracts/Utils/VRFConsumerBaseV2Upgradable.sol:12"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "VRFConsumerBaseV2Upgradable",
            "src": "contracts/Utils/VRFConsumerBaseV2Upgradable.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "153",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "154",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:522"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "_baseURI",
            "offset": 0,
            "slot": "251",
            "type": "t_string_storage",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:27"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:77"
          },
          {
            "label": "dexAddress",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:27"
          },
          {
            "label": "upgradeNftInstance",
            "offset": 0,
            "slot": "302",
            "type": "t_contract(IUpgradeNft)4195",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:30"
          },
          {
            "label": "COORDINATOR",
            "offset": 0,
            "slot": "303",
            "type": "t_contract(VRFCoordinatorV2Interface)183",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:33"
          },
          {
            "label": "LINKTOKEN",
            "offset": 0,
            "slot": "304",
            "type": "t_contract(LinkTokenInterface)94",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:34"
          },
          {
            "label": "numWords",
            "offset": 20,
            "slot": "304",
            "type": "t_uint32",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:35"
          },
          {
            "label": "callbackGasLimit",
            "offset": 24,
            "slot": "304",
            "type": "t_uint32",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:36"
          },
          {
            "label": "requestConfirmations",
            "offset": 28,
            "slot": "304",
            "type": "t_uint16",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:37"
          },
          {
            "label": "subscriptionId",
            "offset": 0,
            "slot": "305",
            "type": "t_uint64",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:38"
          },
          {
            "label": "keyHash",
            "offset": 0,
            "slot": "306",
            "type": "t_bytes32",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:39"
          },
          {
            "label": "fileFormat",
            "offset": 0,
            "slot": "307",
            "type": "t_string_storage",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:79"
          },
          {
            "label": "tokenId",
            "offset": 0,
            "slot": "308",
            "type": "t_uint256",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:82"
          },
          {
            "label": "requestIdToTokenId",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:85"
          },
          {
            "label": "tokenIdToNftSpecifications",
            "offset": 0,
            "slot": "310",
            "type": "t_mapping(t_uint256,t_struct(NftSpecifications)2814_storage)",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:88"
          },
          {
            "label": "tokenIdToNftOwnership",
            "offset": 0,
            "slot": "311",
            "type": "t_mapping(t_uint256,t_struct(NftOwnership)2830_storage)",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:91"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IUpgradeNft)4195": {
            "label": "contract IUpgradeNft",
            "numberOfBytes": "20"
          },
          "t_contract(LinkTokenInterface)94": {
            "label": "contract LinkTokenInterface",
            "numberOfBytes": "20"
          },
          "t_contract(VRFCoordinatorV2Interface)183": {
            "label": "contract VRFCoordinatorV2Interface",
            "numberOfBytes": "20"
          },
          "t_enum(Category)2818": {
            "label": "enum BedroomNft.Category",
            "members": [
              "Studio",
              "Deluxe",
              "Luxury"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NftOwnership)2830_storage)": {
            "label": "mapping(uint256 => struct BedroomNft.NftOwnership)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NftSpecifications)2814_storage)": {
            "label": "mapping(uint256 => struct BedroomNft.NftSpecifications)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(NftOwnership)2830_storage": {
            "label": "struct BedroomNft.NftOwnership",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "designId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "level",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "category",
                "type": "t_enum(Category)2818",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(NftSpecifications)2814_storage": {
            "label": "struct BedroomNft.NftSpecifications",
            "members": [
              {
                "label": "lightIsolationScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "bedroomThermalIsolationScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "soundIsolationScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "temperatureScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "humidityScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "sleepAidMachinesScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "circadianRhythmRegulation",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "sizeScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "heightScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "bedBaseScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "mattressTechnologyScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "mattressThicknessScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "mattressDeformationScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "thermalIsolationScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "13"
              },
              {
                "label": "hygrometricRegulationScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "14"
              },
              {
                "label": "comforterComfortabilityScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "15"
              },
              {
                "label": "pillowComfortabilityScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "16"
              }
            ],
            "numberOfBytes": "544"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "4a27d9ef9002b4ca263caedd6f30dd6bbf6dbbd700b439d5c30126e9e82708ee": {
      "address": "0xcc08216ceDe2208a8Bec1322A714A87D8d23111e",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "vrfCoordinator",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "VRFConsumerBaseV2Upgradable",
            "src": "contracts/Utils/VRFConsumerBaseV2Upgradable.sol:12"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "VRFConsumerBaseV2Upgradable",
            "src": "contracts/Utils/VRFConsumerBaseV2Upgradable.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "153",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "154",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:522"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "_baseURI",
            "offset": 0,
            "slot": "251",
            "type": "t_string_storage",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:27"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:77"
          },
          {
            "label": "dexAddress",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:27"
          },
          {
            "label": "upgradeNftInstance",
            "offset": 0,
            "slot": "302",
            "type": "t_contract(IUpgradeNft)4894",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:30"
          },
          {
            "label": "COORDINATOR",
            "offset": 0,
            "slot": "303",
            "type": "t_contract(VRFCoordinatorV2Interface)183",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:33"
          },
          {
            "label": "LINKTOKEN",
            "offset": 0,
            "slot": "304",
            "type": "t_contract(LinkTokenInterface)94",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:34"
          },
          {
            "label": "numWords",
            "offset": 20,
            "slot": "304",
            "type": "t_uint32",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:35"
          },
          {
            "label": "callbackGasLimit",
            "offset": 24,
            "slot": "304",
            "type": "t_uint32",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:36"
          },
          {
            "label": "requestConfirmations",
            "offset": 28,
            "slot": "304",
            "type": "t_uint16",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:37"
          },
          {
            "label": "subscriptionId",
            "offset": 0,
            "slot": "305",
            "type": "t_uint64",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:38"
          },
          {
            "label": "keyHash",
            "offset": 0,
            "slot": "306",
            "type": "t_bytes32",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:39"
          },
          {
            "label": "fileFormat",
            "offset": 0,
            "slot": "307",
            "type": "t_string_storage",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:79"
          },
          {
            "label": "tokenId",
            "offset": 0,
            "slot": "308",
            "type": "t_uint256",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:82"
          },
          {
            "label": "requestIdToTokenId",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:85"
          },
          {
            "label": "tokenIdToNftSpecifications",
            "offset": 0,
            "slot": "310",
            "type": "t_mapping(t_uint256,t_struct(NftSpecifications)3417_storage)",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:88"
          },
          {
            "label": "tokenIdToNftOwnership",
            "offset": 0,
            "slot": "311",
            "type": "t_mapping(t_uint256,t_struct(NftOwnership)3433_storage)",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:91"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IUpgradeNft)4894": {
            "label": "contract IUpgradeNft",
            "numberOfBytes": "20"
          },
          "t_contract(LinkTokenInterface)94": {
            "label": "contract LinkTokenInterface",
            "numberOfBytes": "20"
          },
          "t_contract(VRFCoordinatorV2Interface)183": {
            "label": "contract VRFCoordinatorV2Interface",
            "numberOfBytes": "20"
          },
          "t_enum(Category)3421": {
            "label": "enum BedroomNft.Category",
            "members": [
              "Studio",
              "Deluxe",
              "Luxury"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NftOwnership)3433_storage)": {
            "label": "mapping(uint256 => struct BedroomNft.NftOwnership)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NftSpecifications)3417_storage)": {
            "label": "mapping(uint256 => struct BedroomNft.NftSpecifications)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(NftOwnership)3433_storage": {
            "label": "struct BedroomNft.NftOwnership",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "designId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "level",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "category",
                "type": "t_enum(Category)3421",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(NftSpecifications)3417_storage": {
            "label": "struct BedroomNft.NftSpecifications",
            "members": [
              {
                "label": "lightIsolationScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "bedroomThermalIsolationScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "soundIsolationScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "temperatureScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "humidityScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "sleepAidMachinesScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "circadianRhythmRegulation",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "sizeScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "heightScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "bedBaseScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "mattressTechnologyScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "mattressThicknessScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "mattressDeformationScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "thermalIsolationScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "13"
              },
              {
                "label": "hygrometricRegulationScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "14"
              },
              {
                "label": "comforterComfortabilityScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "15"
              },
              {
                "label": "pillowComfortabilityScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "16"
              }
            ],
            "numberOfBytes": "544"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b7cc946ce87337bcb0e8bdf6d28919eab0851317eef50c8055fe562f1f019732": {
      "address": "0xb59FAE7c0A3b9624aA9EA0fdE414d636630543C5",
      "txHash": "0x885a83b7e4f19e8eba45f07c168861d5db082a9f7e9e45a4146ee9912df9b449",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "teamWallet",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "Dex",
            "src": "contracts/Dex.sol:13"
          },
          {
            "label": "sleepTokenInstance",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(ISleepToken)2055",
            "contract": "Dex",
            "src": "contracts/Dex.sol:16"
          },
          {
            "label": "bedroomNftInstance",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(IBedroomNft)1959",
            "contract": "Dex",
            "src": "contracts/Dex.sol:19"
          },
          {
            "label": "upgradeNftInstance",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(IUpgradeNft)2152",
            "contract": "Dex",
            "src": "contracts/Dex.sol:22"
          },
          {
            "label": "prices",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_enum(Category)1797,t_struct(NftPrices)1324_storage)",
            "contract": "Dex",
            "src": "contracts/Dex.sol:38"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IBedroomNft)1959": {
            "label": "contract IBedroomNft",
            "numberOfBytes": "20"
          },
          "t_contract(ISleepToken)2055": {
            "label": "contract ISleepToken",
            "numberOfBytes": "20"
          },
          "t_contract(IUpgradeNft)2152": {
            "label": "contract IUpgradeNft",
            "numberOfBytes": "20"
          },
          "t_enum(Category)1797": {
            "label": "enum IBedroomNft.Category",
            "members": [
              "Studio",
              "Deluxe",
              "Luxury"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_enum(Category)1797,t_struct(NftPrices)1324_storage)": {
            "label": "mapping(enum IBedroomNft.Category => struct Dex.NftPrices)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(upgradeInfos)1316_storage)": {
            "label": "mapping(uint256 => struct Dex.upgradeInfos)",
            "numberOfBytes": "32"
          },
          "t_struct(NftPrices)1324_storage": {
            "label": "struct Dex.NftPrices",
            "members": [
              {
                "label": "purchaseCost",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "upgradeCosts",
                "type": "t_mapping(t_uint256,t_struct(upgradeInfos)1316_storage)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(upgradeInfos)1316_storage": {
            "label": "struct Dex.upgradeInfos",
            "members": [
              {
                "label": "indexAttribute",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "valueToAddMax",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "5664721c8b5cff7ebbff43235bd7dbcc23eee919bcb8cb338b83b15921265349": {
      "address": "0xBF1CA1e85461E0B39CcfEada9A5533F014b4Ccd3",
      "txHash": "0x0a7d18c2fbeca186775f2e4641a9dcf595ec5841eb93e7c28387f291af00fac8",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "teamWallet",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "Dex",
            "src": "contracts/Dex.sol:13"
          },
          {
            "label": "sleepTokenInstance",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(ISleepToken)2051",
            "contract": "Dex",
            "src": "contracts/Dex.sol:16"
          },
          {
            "label": "bedroomNftInstance",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(IBedroomNft)1955",
            "contract": "Dex",
            "src": "contracts/Dex.sol:19"
          },
          {
            "label": "upgradeNftInstance",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(IUpgradeNft)2148",
            "contract": "Dex",
            "src": "contracts/Dex.sol:22"
          },
          {
            "label": "prices",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_enum(Category)1793,t_struct(NftPrices)1324_storage)",
            "contract": "Dex",
            "src": "contracts/Dex.sol:38"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IBedroomNft)1955": {
            "label": "contract IBedroomNft",
            "numberOfBytes": "20"
          },
          "t_contract(ISleepToken)2051": {
            "label": "contract ISleepToken",
            "numberOfBytes": "20"
          },
          "t_contract(IUpgradeNft)2148": {
            "label": "contract IUpgradeNft",
            "numberOfBytes": "20"
          },
          "t_enum(Category)1793": {
            "label": "enum IBedroomNft.Category",
            "members": [
              "Studio",
              "Deluxe",
              "Luxury"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_enum(Category)1793,t_struct(NftPrices)1324_storage)": {
            "label": "mapping(enum IBedroomNft.Category => struct Dex.NftPrices)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(upgradeInfos)1316_storage)": {
            "label": "mapping(uint256 => struct Dex.upgradeInfos)",
            "numberOfBytes": "32"
          },
          "t_struct(NftPrices)1324_storage": {
            "label": "struct Dex.NftPrices",
            "members": [
              {
                "label": "purchaseCost",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "upgradeCosts",
                "type": "t_mapping(t_uint256,t_struct(upgradeInfos)1316_storage)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(upgradeInfos)1316_storage": {
            "label": "struct Dex.upgradeInfos",
            "members": [
              {
                "label": "indexAttribute",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "valueToAddMax",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8488e398ca748496f00903119204604cfd2ef3a74762d126c6d1b98693c84c22": {
      "address": "0x94A10A632043273489199be750b5cdD7d5A51d5B",
      "txHash": "0x21f62551c1d8975ab05cdde8b524a48efc6382561faf39ac05cd6ac02249ec9c",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "teamWallet",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "Dex",
            "src": "contracts/Dex.sol:13"
          },
          {
            "label": "sleepTokenInstance",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(ISleepToken)2083",
            "contract": "Dex",
            "src": "contracts/Dex.sol:16"
          },
          {
            "label": "bedroomNftInstance",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(IBedroomNft)1987",
            "contract": "Dex",
            "src": "contracts/Dex.sol:19"
          },
          {
            "label": "upgradeNftInstance",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(IUpgradeNft)2180",
            "contract": "Dex",
            "src": "contracts/Dex.sol:22"
          },
          {
            "label": "prices",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_enum(Category)1825,t_struct(NftPrices)1324_storage)",
            "contract": "Dex",
            "src": "contracts/Dex.sol:38"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IBedroomNft)1987": {
            "label": "contract IBedroomNft",
            "numberOfBytes": "20"
          },
          "t_contract(ISleepToken)2083": {
            "label": "contract ISleepToken",
            "numberOfBytes": "20"
          },
          "t_contract(IUpgradeNft)2180": {
            "label": "contract IUpgradeNft",
            "numberOfBytes": "20"
          },
          "t_enum(Category)1825": {
            "label": "enum IBedroomNft.Category",
            "members": [
              "Studio",
              "Deluxe",
              "Luxury"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_enum(Category)1825,t_struct(NftPrices)1324_storage)": {
            "label": "mapping(enum IBedroomNft.Category => struct Dex.NftPrices)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(upgradeInfos)1316_storage)": {
            "label": "mapping(uint256 => struct Dex.upgradeInfos)",
            "numberOfBytes": "32"
          },
          "t_struct(NftPrices)1324_storage": {
            "label": "struct Dex.NftPrices",
            "members": [
              {
                "label": "purchaseCost",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "upgradeCosts",
                "type": "t_mapping(t_uint256,t_struct(upgradeInfos)1316_storage)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(upgradeInfos)1316_storage": {
            "label": "struct Dex.upgradeInfos",
            "members": [
              {
                "label": "indexAttribute",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "valueToAddMax",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "7f6a3aa6a2fb421cb7572e282e9586b2f71dc59c131a41d5d2ff47483a856176": {
      "address": "0x29C7179fFC751e16d59a0E9503efe748C5A9AC10",
      "txHash": "0xf12b3f01edc4107054a22c61502bb3f335e4578a1ae7701bfb29b5b3e281f3eb",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "teamWallet",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "Dex",
            "src": "contracts/Dex.sol:13"
          },
          {
            "label": "sleepTokenInstance",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(ISleepToken)2057",
            "contract": "Dex",
            "src": "contracts/Dex.sol:16"
          },
          {
            "label": "bedroomNftInstance",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(IBedroomNft)1961",
            "contract": "Dex",
            "src": "contracts/Dex.sol:19"
          },
          {
            "label": "upgradeNftInstance",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(IUpgradeNft)2154",
            "contract": "Dex",
            "src": "contracts/Dex.sol:22"
          },
          {
            "label": "prices",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_enum(Category)1799,t_struct(NftPrices)1324_storage)",
            "contract": "Dex",
            "src": "contracts/Dex.sol:38"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IBedroomNft)1961": {
            "label": "contract IBedroomNft",
            "numberOfBytes": "20"
          },
          "t_contract(ISleepToken)2057": {
            "label": "contract ISleepToken",
            "numberOfBytes": "20"
          },
          "t_contract(IUpgradeNft)2154": {
            "label": "contract IUpgradeNft",
            "numberOfBytes": "20"
          },
          "t_enum(Category)1799": {
            "label": "enum IBedroomNft.Category",
            "members": [
              "Studio",
              "Deluxe",
              "Luxury"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_enum(Category)1799,t_struct(NftPrices)1324_storage)": {
            "label": "mapping(enum IBedroomNft.Category => struct Dex.NftPrices)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(upgradeInfos)1316_storage)": {
            "label": "mapping(uint256 => struct Dex.upgradeInfos)",
            "numberOfBytes": "32"
          },
          "t_struct(NftPrices)1324_storage": {
            "label": "struct Dex.NftPrices",
            "members": [
              {
                "label": "purchaseCost",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "upgradeCosts",
                "type": "t_mapping(t_uint256,t_struct(upgradeInfos)1316_storage)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(upgradeInfos)1316_storage": {
            "label": "struct Dex.upgradeInfos",
            "members": [
              {
                "label": "indexAttribute",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "valueToAddMax",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ba445167673ff960dc8bafcbc0e3c3d855f99865e3d2682ab50d4537ef0fe82d": {
      "address": "0xC78beE0cc7c15C130955edA298c6F44C5b95b2EF",
      "txHash": "0xed85da8a3c83a1741fa015fa71ed208e185ed142b345521b707db3fae45d6d5d",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "teamWallet",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "Dex",
            "src": "contracts/Dex.sol:13"
          },
          {
            "label": "sleepTokenInstance",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(ISleepToken)2053",
            "contract": "Dex",
            "src": "contracts/Dex.sol:16"
          },
          {
            "label": "bedroomNftInstance",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(IBedroomNft)1957",
            "contract": "Dex",
            "src": "contracts/Dex.sol:19"
          },
          {
            "label": "upgradeNftInstance",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(IUpgradeNft)2150",
            "contract": "Dex",
            "src": "contracts/Dex.sol:22"
          },
          {
            "label": "prices",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_enum(Category)1795,t_struct(NftPrices)1324_storage)",
            "contract": "Dex",
            "src": "contracts/Dex.sol:38"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IBedroomNft)1957": {
            "label": "contract IBedroomNft",
            "numberOfBytes": "20"
          },
          "t_contract(ISleepToken)2053": {
            "label": "contract ISleepToken",
            "numberOfBytes": "20"
          },
          "t_contract(IUpgradeNft)2150": {
            "label": "contract IUpgradeNft",
            "numberOfBytes": "20"
          },
          "t_enum(Category)1795": {
            "label": "enum IBedroomNft.Category",
            "members": [
              "Studio",
              "Deluxe",
              "Luxury"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_enum(Category)1795,t_struct(NftPrices)1324_storage)": {
            "label": "mapping(enum IBedroomNft.Category => struct Dex.NftPrices)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(upgradeInfos)1316_storage)": {
            "label": "mapping(uint256 => struct Dex.upgradeInfos)",
            "numberOfBytes": "32"
          },
          "t_struct(NftPrices)1324_storage": {
            "label": "struct Dex.NftPrices",
            "members": [
              {
                "label": "purchaseCost",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "upgradeCosts",
                "type": "t_mapping(t_uint256,t_struct(upgradeInfos)1316_storage)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(upgradeInfos)1316_storage": {
            "label": "struct Dex.upgradeInfos",
            "members": [
              {
                "label": "indexAttribute",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "valueToAddMax",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e2fa9a310424d94b41655c9eeaea5a50e8e4c035394622047832eaa6acaf59d2": {
      "address": "0x9C07E998Daa85e4B3ABee6b05dE371BaAd85B7d1",
      "txHash": "0x04f1a89e51b9fe0adf6b2ced065edb49013aee7b7e5fb28aad3159e67eb4ee16",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "superToken",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(ISuperToken)3159",
            "contract": "Reward",
            "src": "contracts/Reward.sol:21"
          },
          {
            "label": "host",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(ISuperfluid)3722",
            "contract": "Reward",
            "src": "contracts/Reward.sol:24"
          },
          {
            "label": "cfa",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(IConstantFlowAgreementV1)2179",
            "contract": "Reward",
            "src": "contracts/Reward.sol:27"
          },
          {
            "label": "cfaV1",
            "offset": 0,
            "slot": "104",
            "type": "t_struct(InitData)1018_storage",
            "contract": "Reward",
            "src": "contracts/Reward.sol:31"
          },
          {
            "label": "bedroomNft",
            "offset": 0,
            "slot": "106",
            "type": "t_contract(IBedroomNft)4857",
            "contract": "Reward",
            "src": "contracts/Reward.sol:34"
          },
          {
            "label": "rewardsByCategory",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_enum(Category)4689,t_mapping(t_uint256,t_int96))",
            "contract": "Reward",
            "src": "contracts/Reward.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IBedroomNft)4857": {
            "label": "contract IBedroomNft",
            "numberOfBytes": "20"
          },
          "t_contract(IConstantFlowAgreementV1)2179": {
            "label": "contract IConstantFlowAgreementV1",
            "numberOfBytes": "20"
          },
          "t_contract(ISuperToken)3159": {
            "label": "contract ISuperToken",
            "numberOfBytes": "20"
          },
          "t_contract(ISuperfluid)3722": {
            "label": "contract ISuperfluid",
            "numberOfBytes": "20"
          },
          "t_enum(Category)4689": {
            "label": "enum IBedroomNft.Category",
            "members": [
              "Studio",
              "Deluxe",
              "Luxury"
            ],
            "numberOfBytes": "1"
          },
          "t_int96": {
            "label": "int96",
            "numberOfBytes": "12"
          },
          "t_mapping(t_enum(Category)4689,t_mapping(t_uint256,t_int96))": {
            "label": "mapping(enum IBedroomNft.Category => mapping(uint256 => int96))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_int96)": {
            "label": "mapping(uint256 => int96)",
            "numberOfBytes": "32"
          },
          "t_struct(InitData)1018_storage": {
            "label": "struct CFAv1Library.InitData",
            "members": [
              {
                "label": "host",
                "type": "t_contract(ISuperfluid)3722",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "cfa",
                "type": "t_contract(IConstantFlowAgreementV1)2179",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
