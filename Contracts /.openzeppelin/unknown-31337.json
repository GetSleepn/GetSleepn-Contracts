{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "txHash": "0x11fb58e5a790f37330fbb25268141caf8829178a7106531d1813d006f87b86ad"
  },
  "proxies": [
    {
      "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
      "txHash": "0xca20dc1a3f91607f14d75e591b39012a36b7d0c26df0fe0d9d2ec3af652d5bfd",
      "kind": "transparent"
    },
    {
      "address": "0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",
      "txHash": "0x19cd714626149f0766d040a49b8959211cc332c470ee5eeaa67063189d943d1b",
      "kind": "transparent"
    }
  ],
  "impls": {
    "ddbd8a8833d6284a4eff78e5e0a0997bbe19c97d637a0e34e29b5ce355eefc44": {
      "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
      "txHash": "0xfba025afe4dec70945560958f512cdd9699a862e18687bd17e5e56cdf8c70f85",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:51"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "373fb0f05c180fc9544b67c95e21671437d890ffb9dd8e167947ea6dd6767a5e": {
      "address": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
      "txHash": "0xfec07989d1a2c479c5ca75fc56bba95a682e218d60f030e662018c9fb3cef19d",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "vrfCoordinator",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "VRFConsumerBaseV2Upgradable",
            "src": "contracts/BedroomNft.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "VRFConsumerBaseV2Upgradable",
            "src": "contracts/BedroomNft.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "153",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "154",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:522"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "_baseURI",
            "offset": 0,
            "slot": "251",
            "type": "t_string_storage",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:27"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:77"
          },
          {
            "label": "sleepTokenAddress",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:59"
          },
          {
            "label": "COORDINATOR",
            "offset": 0,
            "slot": "302",
            "type": "t_contract(VRFCoordinatorV2Interface)183",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:62"
          },
          {
            "label": "LINKTOKEN",
            "offset": 0,
            "slot": "303",
            "type": "t_contract(LinkTokenInterface)94",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:63"
          },
          {
            "label": "numWords",
            "offset": 20,
            "slot": "303",
            "type": "t_uint32",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:64"
          },
          {
            "label": "callbackGasLimit",
            "offset": 24,
            "slot": "303",
            "type": "t_uint32",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:65"
          },
          {
            "label": "requestConfirmations",
            "offset": 28,
            "slot": "303",
            "type": "t_uint16",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:66"
          },
          {
            "label": "subscriptionId",
            "offset": 0,
            "slot": "304",
            "type": "t_uint64",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:67"
          },
          {
            "label": "keyHash",
            "offset": 0,
            "slot": "305",
            "type": "t_bytes32",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:68"
          },
          {
            "label": "fileFormat",
            "offset": 0,
            "slot": "306",
            "type": "t_string_storage",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:110"
          },
          {
            "label": "tokenId",
            "offset": 0,
            "slot": "307",
            "type": "t_uint256",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:113"
          },
          {
            "label": "requestIdToTokenId",
            "offset": 0,
            "slot": "308",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:116"
          },
          {
            "label": "tokenIdToNftOwnership",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_uint256,t_struct(NftOwnership)2885_storage)",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:117"
          },
          {
            "label": "tokenIdToNftSpecifications",
            "offset": 0,
            "slot": "310",
            "type": "t_mapping(t_uint256,t_struct(NftSpecifications)2869_storage)",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:118"
          },
          {
            "label": "thresholds",
            "offset": 0,
            "slot": "311",
            "type": "t_mapping(t_uint256,t_struct(Thresholds)2892_storage)",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:119"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(LinkTokenInterface)94": {
            "label": "contract LinkTokenInterface",
            "numberOfBytes": "20"
          },
          "t_contract(VRFCoordinatorV2Interface)183": {
            "label": "contract VRFCoordinatorV2Interface",
            "numberOfBytes": "20"
          },
          "t_enum(Category)2873": {
            "label": "enum BedroomNft.Category",
            "members": [
              "Studio",
              "Deluxe",
              "Luxury"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NftOwnership)2885_storage)": {
            "label": "mapping(uint256 => struct BedroomNft.NftOwnership)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NftSpecifications)2869_storage)": {
            "label": "mapping(uint256 => struct BedroomNft.NftSpecifications)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Thresholds)2892_storage)": {
            "label": "mapping(uint256 => struct BedroomNft.Thresholds)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(NftOwnership)2885_storage": {
            "label": "struct BedroomNft.NftOwnership",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "designId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "level",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "categorie",
                "type": "t_enum(Category)2873",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(NftSpecifications)2869_storage": {
            "label": "struct BedroomNft.NftSpecifications",
            "members": [
              {
                "label": "lightIsolationScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "bedroomThermalIsolationScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "soundIsolationScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "temperatureScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "humidityScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "sleepAidMachinesScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "sizeScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "heightScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "bedBaseScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "mattressTechnologyScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "mattressThicknessScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "mattressDeformationScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "thermalIsolationScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "hygrometricRegulationScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "13"
              },
              {
                "label": "comforterComfortabilityScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "14"
              },
              {
                "label": "pillowComfortabilityScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "15"
              }
            ],
            "numberOfBytes": "512"
          },
          "t_struct(Thresholds)2892_storage": {
            "label": "struct BedroomNft.Thresholds",
            "members": [
              {
                "label": "upgradeIncreases",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "requiredLevel",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "multiplier",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
