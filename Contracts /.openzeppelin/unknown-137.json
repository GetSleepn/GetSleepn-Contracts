{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x86A3Df15340e24F2D55d4a3b4E78e30899f3780e",
    "txHash": "0x78c2a56f0f4db6a0cfa3a5a09a98a61070b2e59e1e7cc7df955826991440cb65"
  },
  "proxies": [
    {
      "address": "0xb150a58d376DeF437AB8b19ab351db7BA2C1eDEe",
      "txHash": "0x7100b7c788f3e8c89b1bf354e25fb49c2386d2dfbe3a9a36bc876b5c91d0c0a5",
      "kind": "transparent"
    },
    {
      "address": "0x84c895074eA9aB9FF1ae1101A036fe8040352Dc9",
      "txHash": "0xacaf2a9f3210b9aec7bdee575f5a94a481ea02ef6831a61d3d6ec7e3190187df",
      "kind": "transparent"
    },
    {
      "address": "0x920907cbc06f10bcC141c4126eEd398492398793",
      "txHash": "0x68513ba5e6e3adb293d016f369e41f42943bc1eae755eb13ec9473f04c432e61",
      "kind": "transparent"
    },
    {
      "address": "0x45D484c35f13e6FFe370a881728508bf48da77CB",
      "txHash": "0xfb4b055ecacadc1a15b4c8089507268d0db75a5a2a9dcaee8087ffa025fdb760",
      "kind": "transparent"
    }
  ],
  "impls": {
    "e8ceb25fddfed6250ce2a017d2aef5e9b8fd2cd32eeed57c080db22769c59618": {
      "address": "0xCA8e1B6d707e5fc79A460cc8be4af96993bD0d30",
      "txHash": "0xf7cb614f67cbe59ed1d46b51690e36991c0540a49d45ef0fc31302031649de72",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "vrfCoordinator",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "VRFConsumerBaseV2Upgradable",
            "src": "contracts/Utils/VRFConsumerBaseV2Upgradable.sol:12"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "VRFConsumerBaseV2Upgradable",
            "src": "contracts/Utils/VRFConsumerBaseV2Upgradable.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "153",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "154",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:522"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "_baseURI",
            "offset": 0,
            "slot": "251",
            "type": "t_string_storage",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:27"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:77"
          },
          {
            "label": "dexAddress",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:27"
          },
          {
            "label": "upgradeNftInstance",
            "offset": 0,
            "slot": "302",
            "type": "t_contract(IUpgradeNft)8746",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:30"
          },
          {
            "label": "COORDINATOR",
            "offset": 0,
            "slot": "303",
            "type": "t_contract(VRFCoordinatorV2Interface)183",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:33"
          },
          {
            "label": "LINKTOKEN",
            "offset": 0,
            "slot": "304",
            "type": "t_contract(LinkTokenInterface)94",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:34"
          },
          {
            "label": "numWords",
            "offset": 20,
            "slot": "304",
            "type": "t_uint32",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:35"
          },
          {
            "label": "callbackGasLimit",
            "offset": 24,
            "slot": "304",
            "type": "t_uint32",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:36"
          },
          {
            "label": "requestConfirmations",
            "offset": 28,
            "slot": "304",
            "type": "t_uint16",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:37"
          },
          {
            "label": "subscriptionId",
            "offset": 0,
            "slot": "305",
            "type": "t_uint64",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:38"
          },
          {
            "label": "keyHash",
            "offset": 0,
            "slot": "306",
            "type": "t_bytes32",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:39"
          },
          {
            "label": "fileFormat",
            "offset": 0,
            "slot": "307",
            "type": "t_string_storage",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:79"
          },
          {
            "label": "tokenId",
            "offset": 0,
            "slot": "308",
            "type": "t_uint256",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:82"
          },
          {
            "label": "requestIdToTokenId",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:85"
          },
          {
            "label": "tokenIdToNftSpecifications",
            "offset": 0,
            "slot": "310",
            "type": "t_mapping(t_uint256,t_struct(NftSpecifications)6808_storage)",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:88"
          },
          {
            "label": "tokenIdToNftOwnership",
            "offset": 0,
            "slot": "311",
            "type": "t_mapping(t_uint256,t_struct(NftOwnership)6824_storage)",
            "contract": "BedroomNft",
            "src": "contracts/BedroomNft.sol:91"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IUpgradeNft)8746": {
            "label": "contract IUpgradeNft",
            "numberOfBytes": "20"
          },
          "t_contract(LinkTokenInterface)94": {
            "label": "contract LinkTokenInterface",
            "numberOfBytes": "20"
          },
          "t_contract(VRFCoordinatorV2Interface)183": {
            "label": "contract VRFCoordinatorV2Interface",
            "numberOfBytes": "20"
          },
          "t_enum(Category)6812": {
            "label": "enum BedroomNft.Category",
            "members": [
              "Studio",
              "Deluxe",
              "Luxury"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NftOwnership)6824_storage)": {
            "label": "mapping(uint256 => struct BedroomNft.NftOwnership)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NftSpecifications)6808_storage)": {
            "label": "mapping(uint256 => struct BedroomNft.NftSpecifications)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(NftOwnership)6824_storage": {
            "label": "struct BedroomNft.NftOwnership",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "designId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "level",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "category",
                "type": "t_enum(Category)6812",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(NftSpecifications)6808_storage": {
            "label": "struct BedroomNft.NftSpecifications",
            "members": [
              {
                "label": "lightIsolationScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "bedroomThermalIsolationScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "soundIsolationScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "temperatureScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "humidityScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "sleepAidMachinesScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "circadianRhythmRegulation",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "sizeScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "heightScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "bedBaseScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "mattressTechnologyScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "mattressThicknessScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "mattressDeformationScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "thermalIsolationScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "13"
              },
              {
                "label": "hygrometricRegulationScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "14"
              },
              {
                "label": "comforterComfortabilityScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "15"
              },
              {
                "label": "pillowComfortabilityScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "16"
              }
            ],
            "numberOfBytes": "544"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "6e64436e36d0b56164a0200d2ba2ef2c737b2e3349592a1ed8132d926991aeb1": {
      "address": "0x8149E6a0f0a9B654c3F625F1274EFaEb3253d501",
      "txHash": "0xe4cb0ef50e9e454867889a147e9d33b12075b9dc58120b621a20f4feca3b0926",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "superToken",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(ISuperToken)3159",
            "contract": "Reward",
            "src": "contracts/Reward.sol:17"
          },
          {
            "label": "host",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(ISuperfluid)3722",
            "contract": "Reward",
            "src": "contracts/Reward.sol:19"
          },
          {
            "label": "cfa",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(IConstantFlowAgreementV1)2179",
            "contract": "Reward",
            "src": "contracts/Reward.sol:20"
          },
          {
            "label": "cfaV1",
            "offset": 0,
            "slot": "104",
            "type": "t_struct(InitData)1018_storage",
            "contract": "Reward",
            "src": "contracts/Reward.sol:23"
          },
          {
            "label": "bedroomNft",
            "offset": 0,
            "slot": "106",
            "type": "t_contract(IBedroomNft)4850",
            "contract": "Reward",
            "src": "contracts/Reward.sol:26"
          },
          {
            "label": "rewardsByCategory",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_enum(Category)4689,t_mapping(t_uint256,t_int96))",
            "contract": "Reward",
            "src": "contracts/Reward.sol:29"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IBedroomNft)4850": {
            "label": "contract IBedroomNft",
            "numberOfBytes": "20"
          },
          "t_contract(IConstantFlowAgreementV1)2179": {
            "label": "contract IConstantFlowAgreementV1",
            "numberOfBytes": "20"
          },
          "t_contract(ISuperToken)3159": {
            "label": "contract ISuperToken",
            "numberOfBytes": "20"
          },
          "t_contract(ISuperfluid)3722": {
            "label": "contract ISuperfluid",
            "numberOfBytes": "20"
          },
          "t_enum(Category)4689": {
            "label": "enum IBedroomNft.Category",
            "members": [
              "Studio",
              "Deluxe",
              "Luxury"
            ],
            "numberOfBytes": "1"
          },
          "t_int96": {
            "label": "int96",
            "numberOfBytes": "12"
          },
          "t_mapping(t_enum(Category)4689,t_mapping(t_uint256,t_int96))": {
            "label": "mapping(enum IBedroomNft.Category => mapping(uint256 => int96))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_int96)": {
            "label": "mapping(uint256 => int96)",
            "numberOfBytes": "32"
          },
          "t_struct(InitData)1018_storage": {
            "label": "struct CFAv1Library.InitData",
            "members": [
              {
                "label": "host",
                "type": "t_contract(ISuperfluid)3722",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "cfa",
                "type": "t_contract(IConstantFlowAgreementV1)2179",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c82727c02713fec02e72bde924e67021d0a36910b3614655b25ffa434ea40625": {
      "address": "0x12b378CD3520bB7E2Bb8F8825C4d93aE0cC49ab5",
      "txHash": "0x70fed6f7fde7aab2cf36b691a9c92ab92dc702bd55423317e23827d4a6d967b8",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:51"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "rewardContract",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "SleepToken",
            "src": "contracts/SleepToken.sol:21"
          },
          {
            "label": "teamWallet",
            "offset": 0,
            "slot": "252",
            "type": "t_address",
            "contract": "SleepToken",
            "src": "contracts/SleepToken.sol:24"
          },
          {
            "label": "pool",
            "offset": 0,
            "slot": "253",
            "type": "t_contract(IUniswapV3Pool)1544",
            "contract": "SleepToken",
            "src": "contracts/SleepToken.sol:27"
          },
          {
            "label": "factory",
            "offset": 0,
            "slot": "254",
            "type": "t_contract(IUniswapV3Factory)1522",
            "contract": "SleepToken",
            "src": "contracts/SleepToken.sol:30"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IUniswapV3Factory)1522": {
            "label": "contract IUniswapV3Factory",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV3Pool)1544": {
            "label": "contract IUniswapV3Pool",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b58ce01e5a163f850ed82546256717e2963d4253781cd31500721ab8ededbc4c": {
      "address": "0x8Cac82d6054CfA72279377c6ab00632B54a58A8a",
      "txHash": "0x544240496dc7a2d5b611fa51f072a0c59054ef8d941149a70472ed3e9ad53e86",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "vrfCoordinator",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "VRFConsumerBaseV2Upgradable",
            "src": "contracts/Utils/VRFConsumerBaseV2Upgradable.sol:12"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "VRFConsumerBaseV2Upgradable",
            "src": "contracts/Utils/VRFConsumerBaseV2Upgradable.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "153",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "154",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:522"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "_baseURI",
            "offset": 0,
            "slot": "251",
            "type": "t_string_storage",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:27"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:77"
          },
          {
            "label": "dexAddress",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "UpgradeNft",
            "src": "contracts/UpgradeNft.sol:28"
          },
          {
            "label": "bedroomNftInstance",
            "offset": 0,
            "slot": "302",
            "type": "t_contract(IBedroomNft)8575",
            "contract": "UpgradeNft",
            "src": "contracts/UpgradeNft.sol:31"
          },
          {
            "label": "COORDINATOR",
            "offset": 0,
            "slot": "303",
            "type": "t_contract(VRFCoordinatorV2Interface)183",
            "contract": "UpgradeNft",
            "src": "contracts/UpgradeNft.sol:34"
          },
          {
            "label": "LINKTOKEN",
            "offset": 0,
            "slot": "304",
            "type": "t_contract(LinkTokenInterface)94",
            "contract": "UpgradeNft",
            "src": "contracts/UpgradeNft.sol:35"
          },
          {
            "label": "numWords",
            "offset": 20,
            "slot": "304",
            "type": "t_uint32",
            "contract": "UpgradeNft",
            "src": "contracts/UpgradeNft.sol:36"
          },
          {
            "label": "callbackGasLimit",
            "offset": 24,
            "slot": "304",
            "type": "t_uint32",
            "contract": "UpgradeNft",
            "src": "contracts/UpgradeNft.sol:37"
          },
          {
            "label": "requestConfirmations",
            "offset": 28,
            "slot": "304",
            "type": "t_uint16",
            "contract": "UpgradeNft",
            "src": "contracts/UpgradeNft.sol:38"
          },
          {
            "label": "subscriptionId",
            "offset": 0,
            "slot": "305",
            "type": "t_uint64",
            "contract": "UpgradeNft",
            "src": "contracts/UpgradeNft.sol:39"
          },
          {
            "label": "keyHash",
            "offset": 0,
            "slot": "306",
            "type": "t_bytes32",
            "contract": "UpgradeNft",
            "src": "contracts/UpgradeNft.sol:40"
          },
          {
            "label": "fileFormat",
            "offset": 0,
            "slot": "307",
            "type": "t_string_storage",
            "contract": "UpgradeNft",
            "src": "contracts/UpgradeNft.sol:54"
          },
          {
            "label": "tokenId",
            "offset": 0,
            "slot": "308",
            "type": "t_uint256",
            "contract": "UpgradeNft",
            "src": "contracts/UpgradeNft.sol:57"
          },
          {
            "label": "requestIdToTokenId",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "UpgradeNft",
            "src": "contracts/UpgradeNft.sol:60"
          },
          {
            "label": "tokenIdToUpgradeSpecifications",
            "offset": 0,
            "slot": "310",
            "type": "t_mapping(t_uint256,t_struct(UpgradeSpecifications)9181_storage)",
            "contract": "UpgradeNft",
            "src": "contracts/UpgradeNft.sol:61"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IBedroomNft)8575": {
            "label": "contract IBedroomNft",
            "numberOfBytes": "20"
          },
          "t_contract(LinkTokenInterface)94": {
            "label": "contract LinkTokenInterface",
            "numberOfBytes": "20"
          },
          "t_contract(VRFCoordinatorV2Interface)183": {
            "label": "contract VRFCoordinatorV2Interface",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(UpgradeSpecifications)9181_storage)": {
            "label": "mapping(uint256 => struct UpgradeNft.UpgradeSpecifications)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(UpgradeSpecifications)9181_storage": {
            "label": "struct UpgradeNft.UpgradeSpecifications",
            "members": [
              {
                "label": "attributeIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "valueToAdd",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "valueToAddMax",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "newDesignId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "upgradeDesignId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
