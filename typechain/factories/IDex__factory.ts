/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { IDex, IDexInterface } from "../IDex";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum IBedroomNft.Category",
        name: "category",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "designId",
        type: "uint256",
      },
    ],
    name: "BuyNft",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "ReceivedMoney",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum IBedroomNft.Category",
        name: "category",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newDesignId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "upgradeDesignId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "upgradeIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "UpgradeNft",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "WithdrawMoney",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "enum IBedroomNft.Category",
        name: "_category",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_designId",
        type: "uint256",
      },
    ],
    name: "buyNft",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IBedroomNft.Category",
        name: "_category",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "setBuyingPrices",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISleepToken",
        name: "_sleepToken",
        type: "address",
      },
      {
        internalType: "contract IBedroomNft",
        name: "_bedroomNft",
        type: "address",
      },
      {
        internalType: "contract IUpgradeNft",
        name: "_upgradeNft",
        type: "address",
      },
    ],
    name: "setContracts",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newAddress",
        type: "address",
      },
    ],
    name: "setTeamWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IBedroomNft.Category",
        name: "_category",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_upgradeIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_indexAttribute",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_valueToAddMax",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "setUpgradePrices",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_newDesignId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_upgradeDesignId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_upgradeIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "upgradeNft",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawMoney",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IDex__factory {
  static readonly abi = _abi;
  static createInterface(): IDexInterface {
    return new utils.Interface(_abi) as IDexInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): IDex {
    return new Contract(address, _abi, signerOrProvider) as IDex;
  }
}
